/***************************************************************************//**
 * @file
 ******************************************************************************/
#include "diesel.h"

/**************************************************************************//**
 * @brief
 *    The constructor for the derived 'diesel' class
 *
 * @param[in] hp - create an diesel engine object that has 'hp' horsepower
 *****************************************************************************/
Diesel::Diesel(int hp)
{
   if (hp < 1)
   {
      cerr << "Error, cannot create a diesel engine with " << hp << " horsepower\n";
      return;
   }
   horsePower = hp;
}

/**************************************************************************//**
 * @brief
 *    This is an implementation of the abstract base class member function which
 *    emits the sound generated by this type of engine.
 ******************************************************************************/
void Diesel::revEngine()
{
   cout << "Rumble\n";
}

/***************************************************************************//**
 * @brief
 *    This is an implementation of a virtual identifier attribute.  In the base
 *    class, this function is virtual so it must be implemented in the child
 *    class.  This can provide some 'reflection' type information to the class
 ******************************************************************************/
string Diesel::type()
{
   return "Diesel";
}
